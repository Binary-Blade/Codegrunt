import os
from file_generators.exercise_generator import ExerciseGenerator
from file_generators.exercise_filehandler import ExerciseFileHandler
from core_utils.path_manager import PathManager
from config.language_options import LANGUAGE_EXTENSIONS


class ExerciseManager:
    def __init__(self):
        self.current_exercise_path = None

    def create_new_exercise(self, language: str, subject: str, directory: str):
        #  Generate the content for the exercise
        language = language.lower()
        generator = ExerciseGenerator(language, subject)
        content = generator.generate_content()

        if content:
            # Create the file handler and ensure the directory exists
            file_handler = ExerciseFileHandler(directory, language)
            file_handler.create_directory_if_not_exists(directory)

            # Determine the file path and extension
            extension, _ = LANGUAGE_EXTENSIONS[language]
            file_path = file_handler.generate_file_path(extension)

            # Write the content to the file and set the current exercise path
            self.current_exercise_path = file_handler.write_to_file(
                file_path, content)
            PathManager.set_current_exercise_path(self.current_exercise_path)
            print(f"New exercise created: {self.current_exercise_path}")
        else:
            print("Failed to generate content.")

    def regenerate_exercise(self, language: str, subject: str):
        if self.current_exercise_path:
            directory = os.path.dirname(self.current_exercise_path)
            self.create_new_exercise(language, subject, directory)
